const { emit } = require("../app");

let cSocket = null;      // Ch·ªâ gi·ªØ 1 C (m√°y x·ª≠ l√Ω ·∫£nh)
let feSockets = [];      // Danh s√°ch t·∫•t c·∫£ FE

module.exports = (io) => {
  io.on("connection", (socket) => {
    console.log("‚ö° New client connected:", socket.id);

    // üëâ FE ƒëƒÉng k√Ω
    socket.on("registerFE", () => {
      feSockets.push(socket);
      console.log("üì± FE registered:", socket.id);
    });

    // üëâ C ƒëƒÉng k√Ω
    socket.on("registerC", () => {
      cSocket = socket;
      console.log("üñ•Ô∏è C registered:", socket.id);
    });

    // üëâ FE g·ª≠i test event
    socket.on("testEvent", (data) => {
      console.log("üì§ FE g·ª≠i testEvent:", data);
      // Tr·∫£ ng∆∞·ª£c l·∫°i cho FE
      socket.emit("notify", { msg: "BE nh·∫≠n ƒë∆∞·ª£c t·ª´ FE", data });
    });

    // üëâ C g·ª≠i test event
    socket.on("testEventC", (data) => {
      console.log("üì§ C g·ª≠i testEventC:", data);
      // Tr·∫£ ng∆∞·ª£c l·∫°i cho C
      socket.emit("notify", { msg: "BE nh·∫≠n ƒë∆∞·ª£c t·ª´ C", data });
    });
    //  C nhan du lieu FE gui len
    socket.on("card-recevied",({requestId})=>{
       console.log(`üì• C x√°c nh·∫≠n ƒë√£ nh·∫≠n xong th·∫ª cho requestId=${requestId}`);
        module.exports.emitToAllFE("cards-sent-success", { requestId, message: "C ƒë√£ nh·∫≠n 2 card" });
    });

     // üëâ C trong l√∫c gen emit ti·∫øn tr√¨nh
    socket.on("generating", ({ requestId, progress, timeLeft }) => {
      console.log(`‚öôÔ∏è Generating: req=${requestId}, progress=${progress}%, timeLeft=${timeLeft}s`);
      module.exports.emitToAllFE("generating", { requestId, progress, timeLeft });
    });

    // üëâ Khi disconnect
    socket.on("disconnect", () => {
      feSockets = feSockets.filter((s) => s.id !== socket.id);
      if (cSocket?.id === socket.id) {
        cSocket = null;
      }
      console.log("‚ùå Client disconnected:", socket.id);
    });
  });
};

// üëâ C√°c h√†m ƒë·ªÉ service g·ªçi emit
module.exports.getCsocket = () => cSocket;
module.exports.getFEsockets = () => feSockets;

module.exports.emitToAllFE = (event, data) => {
  feSockets.forEach((s) => s.emit(event, data));
};

module.exports.emitToC = (event, data) => {
  if (cSocket) {
    cSocket.emit(event, data);
  } else {
    console.log("‚ö†Ô∏è No C connected!");
  }
};
